---
- name: Asegurar que el directorio .config existe
  file:
    path: "{{ user_home }}/.config"
    state: directory
    mode: "0755"
  become: no

- name: Encontrar todos los directorios en dotfiles/config
  find:
    paths: "{{ user_home }}/dotfiles/config"
    file_type: directory
    recurse: no
  register: directorios_config
  become: no

- name: Verificar directorios de destino conflictivos en .config
  stat:
    path: "{{ user_home }}/.config/{{ item.path | basename }}"
  register: info_destino_config_dir
  loop: "{{ directorios_config.files }}"
  become: no
  when: info_destino_config_dir.stat.exists and info_destino_config_dir.stat.isdir and info_destino_config_dir.stat.size > 0 and not info_destino_config_dir.stat.islnk

- name: Crear backup ZIP de directorios conflictivos existentes en .config
  archive:
    path: "{{ user_home }}/.config/{{ item.item.path | basename }}"
    dest: "{{ user_home }}/.config/{{ item.item.path | basename }}_backup.zip"
    format: zip
  loop: "{{ info_destino_config_dir.results }}"
  become: no
  when: item.stat.exists and item.stat.isdir and item.stat.size > 0 and not item.stat.islnk

- name: Eliminar directorios conflictivos originales en .config
  file:
    path: "{{ user_home }}/.config/{{ item.item.path | basename }}"
    state: absent
  loop: "{{ info_destino_config_dir.results }}"
  become: no
  when: item.stat.exists and item.stat.isdir and item.stat.size > 0 and not item.stat.islnk

- name: Crear enlaces simbólicos para los directorios de configuración
  file:
    src: "{{ item.path }}"
    dest: "{{ user_home }}/.config/{{ item.path | basename }}"
    state: link
    force: yes
  loop: "{{ directorios_config.files }}"
  become: no

- name: Encontrar todos los archivos en dotfiles/config
  find:
    paths: "{{ user_home }}/dotfiles/config"
    file_type: file
    recurse: no
  register: archivos_config
  become: no

- name: Crear enlaces simbólicos para los archivos de configuración
  file:
    src: "{{ item.path }}"
    dest: "{{ user_home }}/.config/{{ item.path | basename }}"
    state: link
    force: yes
  loop: "{{ archivos_config.files }}"
  become: no

- name: Encontrar todos los archivos en dotfiles/home
  find:
    paths: "{{ user_home }}/dotfiles/home"
    file_type: file
    recurse: no
    hidden: yes
  register: archivos_home
  become: no

- name: Crear enlaces simbólicos para los archivos del directorio home
  file:
    src: "{{ item.path }}"
    dest: "{{ user_home }}/{{ item.path | basename }}"
    state: link
    force: yes
  loop: "{{ archivos_home.files }}"
  become: no

- name: Encontrar todos los directorios en dotfiles/home/local/share
  find:
    paths: "{{ user_home }}/dotfiles/home/local/share"
    file_type: directory
    recurse: no
    hidden: yes
  register: directorios_home_local_share
  become: no

- name: Crear enlaces simbólicos para los directorios en .local/share
  file:
    src: "{{ item.path }}"
    dest: "{{ user_home }}/.local/share/{{ item.path | basename }}"
    state: link
    force: yes
  loop: "{{ directorios_home_local_share.files }}"
  become: no
