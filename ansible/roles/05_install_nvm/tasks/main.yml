---
- name: Definir la versión de Node.js a instalar (opcional, puedes cambiarla)
  set_fact:
    nodejs_version: "lts/*" # Instala la última LTS

- name: Verificar si NVM está instalado
  command: "command -v nvm"
  register: nvm_check
  ignore_errors: true
  changed_when: false

- name: Descargar e instalar NVM si no está instalado
  block:
    # - name: Descargar script de instalación de NVM
    #   ansible.builtin.get_url:
    #     url: "https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh"
    #     dest: "/tmp/nvm_install.sh"
    #     mode: "0755"
    #   register: nvm_download
    #
    # - name: Ejecutar script de instalación de NVM
    #   ansible.builtin.shell: "/tmp/nvm_install.sh"
    #   register: nvm_install_output
    #   changed_when: "'nvm' not in nvm_install_output.stdout"
    #
    # - name: Eliminar script de instalación de NVM
    #   ansible.builtin.file:
    #     path: "/tmp/nvm_install.sh"
    #     state: absent
    #   when: nvm_download.changed or nvm_check.rc != 0
    - name: Install nvm
      ansible.builtin.shell: >
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
      args:
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

    - name: Asegurar que NVM esté en el PATH para futuras tareas
      ansible.builtin.shell: |
        export NVM_DIR="$([ -s "$HOME/.nvm/nvm.sh" ] && printf '%s' "$HOME/.nvm" || printf '/opt/nvm')"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
        [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
        nvm --version
      register: nvm_version_check
      changed_when: false
  when: nvm_check.rc != 0

- name: Instalar Node.js usando NVM
  shell: |
    export NVM_DIR="$([ -s "$HOME/.nvm/nvm.sh" ] && printf '%s' "$HOME/.nvm" || printf '/opt/nvm')"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
    nvm install node
  register: nodejs_install_output
  changed_when: "'Now using node' not in nodejs_install_output.stdout"
# - name: Establecer la versión de Node.js instalada como la predeterminada (opcional)
#   shell: |
#     export NVM_DIR="$([ -s "$HOME/.nvm/nvm.sh" ] && printf '%s' "$HOME/.nvm" || printf '/opt/nvm')"
#     [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
#     nvm alias default "{{ nodejs_version }}"
#   register: nodejs_default_output
#   changed_when: "'default ->' not in nodejs_default_output.stdout"
